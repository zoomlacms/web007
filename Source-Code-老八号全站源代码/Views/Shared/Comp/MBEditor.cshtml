@model ZoomLa.AppCode.Controls.C_MBEditor
@{
    //用于移动端的文本编辑器,暂只用于贴吧
    string valueControlId2 = Model.ValueControlId + "_src";
}
<div class="mb_body">
    <div class="card" style="padding-bottom:0px;">
        <div class="card-header" style="position:relative;text-align:center;">
            @*<a href="javascript:;" onclick="close();" style="position:absolute;left:15px;top:3px;"><i class="zi zi_pathLeft zi_2x"></i></a>*@
            <span>@Model.Title</span>
        </div>
        <div class="card-body" style="padding:0px;position:relative;">
            <div id="mb_emotion_div" style="display:none; z-index:10;position:absolute;width:800px;">
                <input type="hidden" ID="mb_emotion_hid" name="mb_emotion_hid" Value="[]" />
                <iframe src="" class="emotion_ifr" id="mb_emotion_if"></iframe>
            </div>
            <textarea placeholder="说两句吧..." maxlength="3000" id="mb_content_t" name="mb_content_t"></textarea>
            <div class="weui-cells weui-cells_form" id="uploader_bar" style="display: block;">
                <div class="weui-cell">
                    <div class="weui-cell__bd">
                        <div class="weui-uploader">
                            <div class="weui-uploader__bd">
                                <ul class="weui-uploader__files" id="uploaderFiles_bar"></ul>
                                <div class="weui-uploader__input-box">
                                    <input id="uploaderInput" class="weui-uploader__input" type="file" accept="image/gif,image/jpeg,image/png,image/jpg,image/bmp"
                                           multiple="">
                                    <input type="hidden" name="mb_imgs" id="mb_imgs" value=""/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer" style="padding:3px;">
            <div class="mb_submit_wrap">
                @if (Model.ShowVCode)
                {
                    <div class="input-group" style="margin-bottom:5px;">
                        <input type="text" id="@Model.VCodeControlId" name="@Model.VCodeControlId" placeholder="验证码" maxlength="6" class="form-control" autocomplete="off" style="margin-bottom:0px;min-width:120px;"/>
                        <span class="input-group-append">
                            <img id="@(Model.VCodeControlId)_img" class="codeimg" title="点击刷新验证码" style="height:38px;" />
                        </span>
                    </div>
                    <input type="hidden" id="@(Model.VCodeControlId)_hid" name="@(Model.VCodeControlId)_hid" />
                }
                <input type="submit" value="发布" class="btn btn-info btn-block submit" onclick="return mbeditor.subCheck();" />
            </div>
            <div style="margin-top:5px;">
                <a class="btn btn-info btn-sm" onclick="emotion.choose();"><i class="zi zi_smile"></i></a>
                <a class="btn btn-info btn-sm" onclick="$('#uploaderInput').click();"><i class="zi zi_images"></i></a>
            </div>
        </div>
    </div>
    @*用于标识当前编辑器类型*@
    <input type="hidden" name="editor" value="mbeditor"/>
    @*存储拼接转换后的内容*@
    <input type="hidden" id="@(Model.ValueControlId)" name="@(Model.ValueControlId)" />
    <input type="hidden" id="@(valueControlId2)" name="@(valueControlId2)" value="@Model.Content"/>
</div>

@*

<link href="/dist/css/weui.min.css" rel="stylesheet" />
<script src="/dist/js/weui.js"></script>
<script src="/JS/ZL_ValidateCode.js"></script>
@Html.Partial("Comp/MBEditor", new ZoomLa.AppCode.Controls.C_MBEditor()
{
    Title = "回复留言",
    ValueControlId = "MB_Content",
    VCodeControlId= "VCode"
})

*@
<style type="text/css">
.mb_body .card-footer a.btn{font-size:20px;margin-right:5px;padding-top:2px;padding-bottom:2px;cursor:pointer;color:#fff;}
.mb_body .weui-cells{margin-top:0px;}
.mb_body .weui-uploader__files{display:inline-block;}
.mb_body .mb_submit_wrap .text_x{display:inline-block;}
.mb_body .mb_submit_wrap .zi{position:absolute;margin-left:-20px;top:10px;}
.mb_body #mb_content_t{width:100%;height:260px;border:none;padding:5px 8px;resize:none;}
.mb_body #mb_emotion_if{width:100%; height:380px;border:none;overflow:hidden;}
</style>
<script>
    $(function () {
        if ($("#@(Model.VCodeControlId)").length > 0) {
            $("#@(Model.VCodeControlId)").ValidateCode();
        }
    })
    var mbup = { files: [], uploadCount: 0, field: "bar", $hid: $("#mb_imgs"), maxcount: parseInt("5") };
    mbup.uploadCountDom = document.createElement("div");//document.getElementById("uploadCount_"+mbup.field);
    mbup.uploaderFiles = $("#uploaderFiles_" + mbup.field);
    mbup.init = function () {
        // var data = [{ "url": "/UploadFiles/admin1/20161230/20161230aSBkCt.jpg", "desc": "" }, { "url": "/UploadFiles/admin1/20161230/20161230K6wslW.jpg", "desc": "" }];
        var data = [];
        if (mbup.$hid.val() == "") { return; }
        data = JSON.parse(mbup.$hid.val());
        for (var i = 0; i < data.length; i++) {
            data[i].url = mbup.getImgUrl(data[i].url);
        }
        for (var i = 0; i < data.length; i++) {
            var model = { id: i, name: "" + i, url: data[i].url, imgurl: data[i].url };
            mbup.files.push(model);
            var $item = $('<li class="weui-uploader__file" data-id="' + model.id + '" style="background-image: url(' + model.imgurl + ');"></li>');
            mbup.uploaderFiles.append($item);
        }
        mbup.uploadCount = data.length;
        mbup.uploadCountDom.innerHTML = mbup.uploadCount;
    }
    mbup.del = function (id) {
        for (var i = 0; i < mbup.files.length; i++) {
            if (mbup.files[i].id == id) { mbup.files.splice(i, 1); }
        }
        mbup.updateFileJson();
    }
    mbup.updateFileJson = function () {
        var list = [];
        var $hid = mbup.$hid;
        if (mbup.files.length < 1) { $hid.val(""); }
        for (var i = 0; i < mbup.files.length; i++) {
            var file = mbup.files[i];
            var model = { url: file.imgurl, desc: "" };
            list.push(model);
        }
        $hid.val(JSON.stringify(list));
        @MvcHtmlString.Create(Model.On_Change);
    }
    weui.uploader('#uploader_' + mbup.field, {
        url: '/Plugins/Uploadify/UploadFileHandler.ashx',
        auto: true,
        type: 'file',
        fileVal: 'file',
        compress: { width: 1600, height: 1600, quality: .8 },
        onBeforeQueued: function onBeforeQueued(files) {
            if (["image/jpg", "image/jpeg", "image/png", "image/gif"].indexOf(this.type) < 0) {
                weui.alert('请上传图片');
                return false;
            }
            if (this.size > 10 * 1024 * 1024) {
                weui.alert('请上传不超过10M的图片');
                return false;
            }
            if (files.length > mbup.maxcount) {
                weui.alert('最多只能上传' + mbup.maxcount + '张图片，请重新选择');
                return false;
            }
            if (mbup.uploadCount + 1 > mbup.maxcount) {
                weui.alert('最多只能上传' + mbup.maxcount + '张图片');
                return false;
            }

            ++mbup.uploadCount;
            mbup.uploadCountDom.innerHTML = mbup.uploadCount;
        },
        onSuccess: function onSuccess(ret) {
            this.imgurl = ret;
            mbup.files.push(this);
            console.log(mbup.files);
            mbup.updateFileJson();
        },
        onError: function onError(err) {
            console.log("failed", err);
        }
    });
    mbup.uploaderFiles[0].addEventListener('click', function (e) {
        var target = e.target;

        while (!target.classList.contains('weui-uploader__file') && target) {
            target = target.parentNode;
        }
        if (!target) return;

        var url = target.getAttribute('style') || '';
        if (url) {
            url = url.match(/url\((.*?)\)/)[1];
        }
        //上传完成后将图片转化为对象,并关联事件
        var gallery = weui.gallery(url, {
            className: 'custom-name',
            onDelete: function onDelete() {
                weui.confirm('确定删除该图片？', function () {
                    --mbup.uploadCount;
                    mbup.uploadCountDom.innerHTML = mbup.uploadCount;
                    target.remove();
                    gallery.hide();
                    mbup.del($(target).data("id"));
                });
            }
        });
    });
    mbup.getImgUrl = function (url) {
        if (!url) { return ""; }
        url = url.toLocaleLowerCase();
        var updir = "@(ZoomLa.Components.SiteConfig.SiteOption.UploadDir.ToLower())";
        if (url.indexOf("://") > 0)//不做处理
        {

        }
        else if (url.indexOf("uploadfiles/") != 0 && url.indexOf(updir) != 0) {
            url = updir + url;
        }
        return url;
    }
    //------------------------
    var emotion = {
        cfg: { $obj: $("#mb_emotion_div") },
        choose: function () {
            var $obj = this.cfg.$obj;
            var flag = $obj.is(":visible");
            if ($("#mb_emotion_if").attr("src") == "") {
                $("#mb_emotion_if").attr("src", "/Plugins/Ueditor/dialogs/emotion/ImgFace.html");
            }
            if (flag == false) { emotion.cfg.$obj.show(); }
            else { emotion.cfg.$obj.hide(); }
        },
        insert: function (json) {
            var arr = JSON.parse(mbeditor.$emotion.val()); arr.push(json);
            mbeditor.$emotion.val(JSON.stringify(arr));
            mbeditor.setContent(mbeditor.getContent() + json.title);
        },
        close: function () {
            this.cfg.$obj.hide();
        }
    };
    function InsertSmiley(json) {
        return emotion.insert(json);
    }
    var mbeditor = {
        $value: $("#@Model.ValueControlId"),
        $value2: $("#@(valueControlId2)"),
        boundary: "@Call.Boundary",
        $content: $("#mb_content_t"),
        $emotion: $("#mb_emotion_hid"),//已使用表情控件数据
        //--------------------------
        getContent: function () {
            return this.$content.val();
        },
        setContent: function (text) {
            this.$content.val(text);
            @MvcHtmlString.Create(Model.On_Change);
        },
        emotionsToHtml: function (content) {
            var ref = this;
            var emotionStr = ref.$emotion.val();
            if (!emotionStr || emotionStr == "[]") { return content; }
            //-----------------------
            var dt = JSON.parse(emotionStr);
            for (var i = 0; i < dt.length; i++) {
                var flag = dt[i].title;
                var imgTlp = "<img src='/Plugins/Ueditor/dialogs/emotion/" + dt[i].realurl + "' class='imgface_img' />";
                while (content.indexOf(flag) > -1) {
                    content = content.replace(flag, imgTlp);
                }
            }
            return content;
        },
        imagesToHtml: function (content) {
            var ref = this;
            var imgStr = mbup.$hid.val();
            if (!imgStr || imgStr == "[]") { return content; }
            //-----------------------
            var dt = JSON.parse(imgStr);
            var imgHtml = "";
            for (var i = 0; i < dt.length; i++) {
                var imgTlp = "<img src='" + dt[i].url + "' class='mb_img'>";
                imgHtml += imgTlp;
            }
            return (content + "<div>" + imgHtml + "</div>");
        },
        //将文本字符串格式化
        formatToHtml: function (content) {
            content = content.replace(/\r\n/g, "<br />");
            return content;
        },
        //--------------
        init: function () {
            var ref = this;
            if (ref.$value2.val() != "") {
                var valueArr = ref.$value2.val().split(ref.boundary);
                ref.$content.val(valueArr[0]);
                mbup.$hid.val(valueArr[1]);
                ref.$emotion.val(valueArr[2]);
            }
            $("#mb_content_t").change(function () {
                @MvcHtmlString.Create(Model.On_Change);
            });
            mbup.init();
        },
        //根据当前用户输入,更新控件中所保存的值
        updateValue: function () {
            var ref = this;
            var content = ref.getContent(), content2 = "";
            content = ref.emotionsToHtml(content);
            content = ref.imagesToHtml(content);
            content = ref.formatToHtml(content);
            ref.$value.val(content);
            //文本|图片|表情
            content2 = ref.$content.val() + ref.boundary + mbup.$hid.val() + ref.boundary + ref.$emotion.val();
            ref.$value2.val(content2);
        },
        subCheck: function () {
            var ref = this;
            var content = ref.getContent();
            if (content == "") { weui.alert("内容不能为空"); return false; }
            if ($("#@(Model.VCodeControlId)").length > 0 && $("#@(Model.VCodeControlId)").val().length < 6) { weui.alert("验证码不正确"); return false; }
            ref.updateValue();
            //--------------------callback begin
            @MvcHtmlString.Create(Model.On_Submit)
            //--------------------callback end
            return true;
        }
    };
    mbeditor.init();
</script>